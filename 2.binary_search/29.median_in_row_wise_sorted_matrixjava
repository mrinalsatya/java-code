class Solution {
    public int findCeil(int[] arr, int x) {
        // code here
        int n = arr.length, low = 0, high = n-1;
        int ans = n;
        while(low <= high){
            int mid = low + (high-low)/2;
            if(arr[mid] > x){
                ans = mid;
                high = mid - 1;
            }
            else{
                low = mid+1;
            }
        }
        
        return ans;
    }
    public int findSmallerEqual(int[][] mat, int num){
        int n = mat.length, m = mat[0].length;
        int cnt = 0;
        for(int i = 0; i< n; i++){
            cnt += findCeil(mat[i], num);
        }
        
        return cnt;
    }
    public int median(int[][] mat) {
        // code here
        int n = mat.length, m = mat[0].length;
        int low = Integer.MAX_VALUE, high = Integer.MIN_VALUE;
        
        for(int i=0; i< n; i++){
            low = Math.min(low, mat[i][0]);
            high = Math.max(high, mat[i][m-1]);
        }
        
        int requiredCnt = (n*m)/2;
        
        while(low <= high){
            int mid = low + (high-low)/2;
            int count = findSmallerEqual(mat, mid);
            if(count <= requiredCnt){
                low = mid+1;
            }else{
                high = mid - 1;
            }
        }
        
        return low;
    }
}